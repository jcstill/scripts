#!/bin/bash

# Tool to modify PDFs (basically a gs wrapper)
# Copyright (C) 2020, Jacob Still github.com/jcstill
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see https://www.gnu.org/licenses/

# Some of this code comes from Alfred Klomp's website: http://www.alfredklomp.com/programming/shrinkpdf/

usage(){
	printf "Usage:\n"
	printf "  pdftool [OPTION] [arguments...]\n\n"
	printf "Options:\n"
	printf "  (s)hrink <OUT> <IN> <RES>     Shrink the IN PDF to OUT at (optional) RES resolution. Default is 100 dpi\n"
	printf "  (c)ombine <OUT> <INFILE(s)> Combine INFILE(s) into OUT\n"
	exit
}

shrink(){

	# Need an input file:
	if [ -z "$2" ];then
		usage
	fi
	# Output filename defaults to "-" (stdout) unless given:
	if [ ! -z "$1" ];then
		OUT="$1"
	# else
	# 	OUT="-"
	fi
	# Output resolution defaults to 300 unless given:
	if [ -n "$3" ];then
		RES="$3"
	else
		RES="100"
	fi
	gs -q -dNOPAUSE -dBATCH -dSAFER \
	-sDEVICE=pdfwrite \
	-dCompatibilityLevel=1.3 \
	-dPDFSETTINGS=/screen \
	-dEmbedAllFonts=true \
	-dSubsetFonts=true \
	-dAutoRotatePages=/None \
	-dColorImageDownsampleType=/Bicubic \
	-dColorImageResolution="$RES" \
	-dGrayImageDownsampleType=/Bicubic \
	-dGrayImageResolution="$RES" \
	-dMonoImageDownsampleType=/Subsample \
	-dMonoImageResolution="$RES" \
	-sOutputFile="$OUT" \
	"$2"
	# If $1 and $2 are regular files, we can compare file sizes to
	# see if we succeeded in shrinking. If not, we copy $1 over $2:
	if [ ! -f "$1" ] || [ ! -f "$2" ];then
		return 0;
	fi
	ISIZE="$(wc -c "$2"|cut -f1 -d\ )"
	OSIZE="$(wc -c "$1"|cut -f1 -d\ )"
	if [ "$ISIZE" -lt "$OSIZE" ];then
		echo "copy"
		cp "$2" "$1"
	fi
}
combine(){
	OUT="$1"
	shift
	for i in "$@";do
		if [ ! -f "$i" ];then
			printf "%s not file" "$i" >&2
			return 0;
		fi
	done
	gs -dNOPAUSE -sDEVICE=pdfwrite \
	-sOUTPUTFILE="$OUT"\
	-dBATCH \
	"$@"
}

# while [ $# -gt 0 ];do
	case "$1" in
		-s|--s|s|-shrink|--shrink|shrink)
			shift
			shrink "$@"
			;;
		-c|--c|c|-combine|--combine|combine)
			shift
			combine "$@" 
			;;
		* )
			usage;;
	esac
# 	shift
# done
# exit
