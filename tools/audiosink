#!/bin/bash

# Switch the default audio sink and move existing streams to new sink
# Copyright (C) 2020, Jacob Still github.com/jcstill
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see https://www.gnu.org/licenses/

INTERNAL="$(pacmd list-sinks | grep name: | grep alsa_output.pci-0000_00_1f.3.analog-stereo | awk '{print $2;}' | sed 's|[<>,]||g')"
K3="$(pacmd list-sinks | grep name: | grep alsa_output.usb-FiiO_K3-00.analog-stereo | awk '{print $2;}' | sed 's|[<>,]||g')"
KVM="$(pacmd list-sinks | grep name: | grep alsa_output.usb-VIA_Technologies_Inc._USB_Audio_Device-00.iec958-stereo | awk '{print $2;}' | sed 's|[<>,]||g')"
HDMITV="$(pacmd list-sinks | grep name: | grep alsa_output.pci-0000_01_00.1.hdmi-stereo-extra2 | awk '{print $2;}' | sed 's|[<>,]||g')"
HDMIPC="$(pacmd list-sinks | grep name: | grep alsa_output.pci-0000_01_00.1.hdmi-stereo-extra4 | awk '{print $2;}' | sed 's|[<>,]||g')"
SINKS="$(pacmd list-sinks | grep name:)"
CURRENT="$(pacmd list-sinks | grep 'index:\|name:' | grep '*' -A 1 | tail -1 | awk '{print $2;}' | sed 's|[<>,]||g')"

if [ "$1" == "current" ]; then
	echo "$CURRENT"
	exit 0
elif [ "$1" == "listall" ]; then
	echo "$SINKS"
	exit 0
elif [ "$1" == "k3" ]; then
	if [ -z "$K3" ]; then
		echo "$K3 not found"
		echo "Setting to internal"
		pactl set-default-sink $INTERNAL
	else
		echo "Setting to K3"
		pactl set-default-sink $K3
	fi
elif [ "$1" == "kvm" ]; then
	if [ -z "$KVM" ]; then
		echo "$KVM not found"
		echo "Setting to internal"
		pactl set-default-sink $INTERNAL
	else
		echo "Setting to KVM"
		pactl set-default-sink $KVM
	fi
elif [ "$1" == "hdmi" ]; then
	if [ -n "$HDMITV" ] && [ "$HDMITV" != "" ]; then
		echo "Setting to TV HDMI"
		pactl set-default-sink $HDMITV
	elif [ -n "$HDMIPC" ] && [ "$HDMIPC" != "" ]; then
		echo "Setting to PC HDMI"
		pactl set-default-sink $HDMIPC
	else
		echo "No HDMI found"
		echo "Setting to internal"
		pactl set-default-sink $INTERNAL
	fi
elif [ "$1" == "internal" ]; then
	echo "Setting to INTERNAL"
	pactl set-default-sink $INTERNAL
else
	echo "Setting default sink to internal"
	pactl set-default-sink $INTERNAL
fi

if [ -z "$2" ]; then
	pactl list sink-inputs|grep "Sink Input\|application.name"|tr '\n\r#"' ' '|awk '{print $3 ": " $6}'|while read stream;do
		SID="$(echo $stream|awk '{print $1}'|tr -d ':')"
		echo "moving stream $stream"
		pactl move-sink-input "$SID" "@DEFAULT_SINK@"
	done
#	pactl list short sink-inputs|while read stream; do
#		SID=$(echo $stream|cut '-d ' -f1)
#		echo "moving stream $SID"
#		pactl move-sink-input "$SID" "@DEFAULT_SINK@"
#	done
fi
exit



